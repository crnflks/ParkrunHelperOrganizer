# Deployment for Parkrun Helper Organizer Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parkrun-helper-frontend
  namespace: parkrun-helper
  labels:
    app: parkrun-helper-organizer
    component: frontend
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: parkrun-helper-organizer
      component: frontend
  template:
    metadata:
      labels:
        app: parkrun-helper-organizer
        component: frontend
        version: v1.0.0
    spec:
      containers:
      - name: frontend
        image: parkrun-helper/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        # React environment variables
        - name: REACT_APP_API_BASE_URL
          value: "http://parkrun-helper-backend-service:3000"
        - name: REACT_APP_AZURE_AD_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: parkrun-helper-secrets
              key: AZURE_AD_CLIENT_ID
        - name: REACT_APP_AZURE_AD_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: parkrun-helper-secrets
              key: AZURE_AD_TENANT_ID
        - name: NODE_ENV
          value: "production"
        # Resource limits and requests
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # Health checks
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101  # nginx user
          runAsGroup: 101
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        # Volume mounts for nginx temp directories
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: nginx-tmp
          mountPath: /tmp
      # Volumes
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-tmp
        emptyDir: {}
      # Restart policy
      restartPolicy: Always
      # Security context for pod
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      # Node selector
      nodeSelector:
        kubernetes.io/os: linux
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: parkrun-helper-organizer
                  component: frontend
              topologyKey: kubernetes.io/hostname